{"ast":null,"code":"import _classCallCheck from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bridgeit/Shweta/Serverlessfrontend/src/components/sideNavigationBar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'; // import NotesIcon from '@material-ui/icons/lightbulb_outline';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    hide: {\n      display: 'none'\n    },\n    drawerPaper: {\n      width: \"240px\",\n      top: \"65px\"\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px'\n    }, theme.mixins.toolbar, {\n      justifyContent: 'flex-end'\n    })\n  };\n};\n\nvar PersistentDrawerLeft =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersistentDrawerLeft, _React$Component);\n\n  function PersistentDrawerLeft() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersistentDrawerLeft);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersistentDrawerLeft)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleToggle = function () {\n      _this.setState(function (state) {\n        return {\n          open: !state.open\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PersistentDrawerLeft, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, ['Notes', 'Reminders'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(\"img\", {\n          src: require('../assets/images/bulb.svg'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          src: require('../assets/images/reminders.svg'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, ['Edit Labels'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(\"img\", {\n          src: require('../assets/images/editLabel.svg'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }) : \"\"), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, ['Archive', 'Trash'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(\"img\", {\n          src: require('../assets/images/archive.svg'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          src: require('../assets/images/trash.svg'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return PersistentDrawerLeft;\n}(React.Component);\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(PersistentDrawerLeft);","map":{"version":3,"sources":["/home/bridgeit/Shweta/Serverlessfrontend/src/components/sideNavigationBar.jsx"],"names":["React","PropTypes","withStyles","Drawer","List","Divider","MenuIcon","ListItem","ListItemIcon","ListItemText","MailIcon","IconButton","Tooltip","styles","theme","root","display","hide","drawerPaper","width","top","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","PersistentDrawerLeft","state","open","handleToggle","setState","props","classes","drawer","paper","map","text","index","require","Component","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import NotesIcon from '@material-ui/icons/lightbulb_outline';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: { \n    width: \"240px\",\n    top: \"65px\"\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: false,\n  };\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={this.handleToggle}\n        >\n          <Tooltip title=\"Menu\">\n            <MenuIcon />\n          </Tooltip>\n        </IconButton>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          {/* <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>*/}\n          <List>\n            {['Notes', 'Reminders'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <img src={require('../assets/images/bulb.svg')} /> : <img src={require('../assets/images/reminders.svg')} />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider /> \n          <List>\n            {['Edit Labels'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <img src={require('../assets/images/editLabel.svg')} /> : \"\"}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['Archive', 'Trash'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <img src={require('../assets/images/archive.svg')} /> : <img src={require('../assets/images/trash.svg')} />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n\n      </div>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);\n"]},"metadata":{},"sourceType":"module"}