{"ast":null,"code":"import _classCallCheck from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bridgeit/Shweta/Serverlessfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bridgeit/Shweta/Serverlessfrontend/src/components/resetPassComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Button } from \"@material-ui/core\";\nimport { resetPassword } from \"../services/userService\";\n\nvar ForgotPassComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPassComponent, _Component);\n\n  function ForgotPassComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassComponent).call(this, props));\n\n    _this.handlepasswordChange = function (event) {\n      var password = event.target.value;\n\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.handlenewpasswordChange = function (event) {\n      var newpassword = event.target.value;\n\n      _this.setState({\n        newpassword: newpassword\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.password === \"\") {\n        toast(\"Password cannot be empty\", {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      } else if (_this.state.newpassword === \"\") {\n        toast(\"Confirm Password cannot be empty\", {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      } else if (_this.state.password.length < 8) {\n        toast(\"Password must be of atleast 8 characters long\", {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      } else if (_this.state.newpassword.length < 8) {\n        toast(\"Confirm Password must be of atleast 8 characters long\", {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      } else if (_this.state.password !== _this.state.newpassword) {\n        toast(\"Password and Confirm password must be same\", {\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      } else {\n        event.preventDefault();\n        var current_url = window.location.pathname;\n        var verify_user_token = current_url.substr(15);\n        console.log('49--resetpassComponent--Current url is--:', current_url);\n        console.log('50--resetpassComponent--Token is--:', verify_user_token);\n        resetPassword(_this.state.password, verify_user_token);\n      }\n    };\n\n    _this.state = {\n      password: '',\n      newpassword: '',\n      toast: false\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPassComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"New Password\")), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handlepasswordChange,\n        style: {\n          marginBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Confirm New Password\")), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm new password\",\n        name: \"newpassword\",\n        value: this.state.newpassword,\n        onChange: this.handlenewpasswordChange,\n        style: {\n          marginBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          paddingTop: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: \"darkgreen\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          margin: \"9px auto\",\n          border: \"none\",\n          cursor: \"pointer\",\n          width: \"100%\",\n          boxAlign: \"center\"\n        },\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Update Password\")))), React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ForgotPassComponent;\n}(Component);\n\nexport default withRouter(ForgotPassComponent);","map":{"version":3,"sources":["/home/bridgeit/Shweta/Serverlessfrontend/src/components/resetPassComponent.jsx"],"names":["React","Component","withRouter","ToastContainer","toast","Button","resetPassword","ForgotPassComponent","props","handlepasswordChange","event","password","target","value","setState","handlenewpasswordChange","newpassword","handleSubmit","preventDefault","state","position","POSITION","BOTTOM_CENTER","length","current_url","window","location","pathname","verify_user_token","substr","console","log","marginBottom","paddingTop","backgroundColor","color","padding","margin","border","cursor","width","boxAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { Button } from \"@material-ui/core\";\nimport { resetPassword }  from \"../services/userService\";\nclass ForgotPassComponent extends Component \n{\n    constructor(props) {\n        super(props)\n        this.state = {\n            password: '',\n            newpassword: '',\n            toast : false\n        } \n    }\n    handlepasswordChange = (event) => {\n        const password = event.target.value\n        this.setState({ password: password })\n    }\n\n    handlenewpasswordChange = (event) => {\n        const newpassword = event.target.value\n        this.setState({ newpassword: newpassword })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.password === \"\") {\n            toast(\"Password cannot be empty\",{position: toast.POSITION.BOTTOM_CENTER});\n        }\n        else if (this.state.newpassword === \"\") {\n            toast(\"Confirm Password cannot be empty\",{position: toast.POSITION.BOTTOM_CENTER});\n        }\n        else if (this.state.password.length < 8) {\n            toast(\"Password must be of atleast 8 characters long\", { position: toast.POSITION.BOTTOM_CENTER });\n        }\n        else if (this.state.newpassword.length < 8) {\n            toast(\"Confirm Password must be of atleast 8 characters long\", { position: toast.POSITION.BOTTOM_CENTER });\n        }\n        else if (this.state.password !== this.state.newpassword) {\n            toast(\"Password and Confirm password must be same\", { position: toast.POSITION.BOTTOM_CENTER });\n        }\n        else \n        {\n            event.preventDefault();\n            let current_url = window.location.pathname;\n            let verify_user_token = current_url.substr(15)\n            console.log('49--resetpassComponent--Current url is--:',current_url);\n            console.log('50--resetpassComponent--Token is--:',verify_user_token);\n            resetPassword(this.state.password, verify_user_token);\n        }\n    }\n   \n    render() {\n        return (\n            <div>\n                <div>\n                    <label><b>New Password</b></label>\n                    <input type=\"password\" placeholder=\"Enter new password\" name=\"password\" value={this.state.password} onChange={this.handlepasswordChange} style={{marginBottom:\"20px\"}}/>                     \n                    <label><b>Confirm New Password</b></label>                    \n                    <input type=\"password\" placeholder=\"Confirm new password\" name=\"newpassword\" value={this.state.newpassword} onChange={this.handlenewpasswordChange} style={{marginBottom:\"20px\"}}/>                      \n                    <div style={{paddingTop:\"10px\"}}> \n                    <Button style=\n                    {{\n                        backgroundColor:\"darkgreen\",\n                        color: \"white\",\n                        padding: \"10px 20px\",\n                        margin: \"9px auto\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        width: \"100%\",\n                        boxAlign: \"center\"\n                    }} type=\"submit\" onClick={this.handleSubmit}>\n                    <b>Update Password</b>\n                     </Button>\n                    </div>\n                </div> \n                <ToastContainer/>                              \n            </div>\n        )\n    } \n}\n\nexport default withRouter(ForgotPassComponent);"]},"metadata":{},"sourceType":"module"}